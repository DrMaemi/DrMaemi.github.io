<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-02-12T21:15:34+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Maemi’s devlog</title><author><name>Dr.Maemi</name></author><entry><title type="html">Mermaid를 이용해 UML 그리기</title><link href="http://localhost:4000/github.io/how-to-use-mermaid/" rel="alternate" type="text/html" title="Mermaid를 이용해 UML 그리기" /><published>2022-02-11T00:00:00+09:00</published><updated>2022-02-11T00:00:00+09:00</updated><id>http://localhost:4000/github.io/how-to-use-mermaid</id><content type="html" xml:base="http://localhost:4000/github.io/how-to-use-mermaid/"><![CDATA[<h2 id="1-mermaid란">1. Mermaid란?</h2>
<p>Mermaid란 javascript 기반으로 구현된 다이어그램 및 차트 작성 도구이다.
Mermaid는 정형화된 텍스트를 렌더링하여 다이어그램을 동적으로 생성하거나 수정 가능하다.</p>

<p>예를 들어 몇 개의 노드와 엣지로 구성된 그래프를 그리고 싶다면 다음과 같이 코드를 작성할 수 있다.</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"mermaid"</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>
graph TD
  A --&gt; B
  A --&gt; C
  B --&gt; D
  C --&gt; D
<span class="nt">&lt;/div&gt;</span>

<span class="nt">&lt;div</span> <span class="na">class=</span><span class="s">"mermaid"</span> <span class="na">align=</span><span class="s">"center"</span><span class="nt">&gt;</span>
graph LR; A --&gt; B; A --&gt; C; B --&gt; D; C --&gt; D;
<span class="nt">&lt;/div&gt;</span>
</code></pre></div></div>
<p><br />
결과</p>
<div class="mermaid" align="center">
graph TD
  A --&gt; B
  A --&gt; C
  B --&gt; D
  C --&gt; D
</div>
<p style="text-align: center">&lt;그림 1. Top-Down 그래프&gt;</p>

<div class="mermaid" align="center">
graph LR; A --&gt; B; A --&gt; C; B --&gt; D; C --&gt; D;
</div>
<p style="text-align: center">&lt;그림 2. Left-Right 그래프&gt;</p>

<p>더 자세한 내용은 <a href="https://mermaid-js.github.io/mermaid/#/">Mermaid 공식 홈페이지</a>를 참조하여 확인할 수 있다.</p>

<h2 id="2-mermaid-이용-환경-구성">2. Mermaid 이용 환경 구성</h2>
<p>VS Code에서 마크다운으로 작성한 문서를 Preview로 간단히 확인하고 싶을 때에는 VS Code에서 관련 플러그인을 설치하면 된다. 그러나 Github Page에서 사용하기 위해서는 다른 방법을 사용해야 한다.
Github Page가 관련 플러그인을 지원해주면 Github Page로 호스팅된 블로그에서 렌더링하여 보여줄 수 있지만, 작성 날짜 기준으로 지원하지 않기 때문에 <strong>1. Mermaid의 CDN 서버로부터 모듈을 임베딩</strong>하거나 <strong>2. Mermaid의 javascript 코드를 통째로 들여오는</strong> 방식으로 사용해야 한다. 편의상 전자의 방식을 Embedding CDN, 후자의 방식을 Importing Implementation이라 하겠다. 본문에서는 두 가지 방법을 모두 다룬다.</p>

<h3 id="21-embedding-cdn">2.1. Embedding CDN</h3>
<p>CDN으로부터 모듈을 스크립트로 임베딩하기 위해서는 각 html 문서의 헤드 부분에 명시해야 하는데, Jekyll에서는 <code class="language-plaintext highlighter-rouge">/_includes/head/custom.html</code>에 명시함으로써 목적한 효과를 이룰 수 있다. 해당 파일에 다음과 같은 코드를 삽입한다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span><span class="nx">mermaid</span><span class="p">.</span><span class="nx">initialize</span><span class="p">({</span><span class="na">startOnLoad</span><span class="p">:</span><span class="kc">true</span><span class="p">});</span><span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<p>이후에 Mermaid 양식의 코드를 작성하면 &lt;그림 1&gt;과 &lt;그림 2&gt;처럼 웹 페이지에서 적절히 렌더링된 그림을 볼 수 있다.</p>

<h3 id="22-importing-implementation">2.2. Importing Implementation</h3>
<p>우선, 텍스트를 다이어그램 등으로 렌더링하기 위한 자바스크립트 코드를 다운받아야 한다. 해당 파일은 <a href="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js">https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js</a> 링크를 통해 다운받을 수 있다.</p>

<p>다운받은 파일 이름이 <code class="language-plaintext highlighter-rouge">mermaid.min.js</code>이고, 다운받은 파일을 <code class="language-plaintext highlighter-rouge">/assets/js</code> 경로에 위치시켰다면 2.1장과 같은 원리로 <code class="language-plaintext highlighter-rouge">/_includes/head/custom.html</code>에 다음과 같은 코드를 삽입한다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"/assets/js/mermaid.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span><span class="nx">mermaid</span><span class="p">.</span><span class="nx">initialize</span><span class="p">({</span><span class="na">startOnLoad</span><span class="p">:</span><span class="kc">true</span><span class="p">});</span><span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<p>이후에 Mermaid 양식의 코드를 작성하면 &lt;그림 1&gt;과 &lt;그림 2&gt;처럼 웹 페이지에서 적절히 렌더링된 그림을 볼 수 있다.</p>]]></content><author><name>Dr.Maemi</name></author><category term="Github.io" /><category term="Jekyll" /><category term="Liquid" /><category term="Mermaid" /><summary type="html"><![CDATA[1. Mermaid란? Mermaid란 javascript 기반으로 구현된 다이어그램 및 차트 작성 도구이다. Mermaid는 정형화된 텍스트를 렌더링하여 다이어그램을 동적으로 생성하거나 수정 가능하다.]]></summary></entry><entry><title type="html">포스트 수정 날짜 표시</title><link href="http://localhost:4000/github.io/show-modified-time/" rel="alternate" type="text/html" title="포스트 수정 날짜 표시" /><published>2022-02-10T00:00:00+09:00</published><updated>2022-02-10T00:00:00+09:00</updated><id>http://localhost:4000/github.io/show-modified-time</id><content type="html" xml:base="http://localhost:4000/github.io/show-modified-time/"><![CDATA[<p>이번엔 포스트 수정 날짜를 표시하는 방법에 대해서 알아보자.
현재 블로그는 <a href="https://github.com/mmistakes/minimal-mistakes">Minimal Mistakes</a> 테마의 <a href="https://github.com/mmistakes/minimal-mistakes/commit/2632ff650a6efb0d856a37d675be5f1b63692181">Commit: 2632ff6</a>가 완료된 시점의 코드를 기반으로 작성되었는데, 수정 날짜와 관련된 파일은 다음 세 개이다.</p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">/_layouts/single.html</code></li>
  <li><code class="language-plaintext highlighter-rouge">/_includes/page__meta.html</code></li>
  <li><code class="language-plaintext highlighter-rouge">/_includes/page__date.html</code></li>
</ul>

<p>본문에서는 이 중 <code class="language-plaintext highlighter-rouge">page__meta.html</code>과 <code class="language-plaintext highlighter-rouge">page__date.html</code> 파일을 수정하여 &lt;그림 1&gt;과 같이 참조 관계를 형성할 것이다.</p>

<div class="mermaid" align="center">
  graph TD
  /_layouts/single.html --&gt; /_includes/page__meta.html
  /_includes/page__meta.html --&gt; /_includes/page__date.html
</div>
<p style="text-align: center">&lt;그림 1. 참조 관계&gt;</p>

<h2 id="1-page__metahtml">1. page__meta.html</h2>
<p><code class="language-plaintext highlighter-rouge">{% include page__date.html}</code> 코드를 포스트의 게시 날짜를 표시하는 <code class="language-plaintext highlighter-rouge">&lt;time&gt;</code> 태그 다음에 삽입한다. 해당 파일의 전체 코드는 다음과 같다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- page__meta.html --&gt;</span>

{% assign document = post | default: page %}
{% if document.read_time or document.show_date %}
  <span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"page__meta"</span><span class="nt">&gt;</span>
    {% if document.show_date and document.date %}
      {% assign date = document.date %}
      <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"page__meta-date"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"far {% if include.type == 'grid' and document.read_time and document.show_date %}fa-fw {% endif %}fa-calendar-alt"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/i&gt;</span>
        {% assign date_format = site.date_format | default: "%B %-d, %Y" %}
        <span class="nt">&lt;time</span> <span class="na">datetime=</span><span class="s">"{{ date | date_to_xmlschema }}"</span><span class="nt">&gt;</span>{{ date | date: date_format }}<span class="nt">&lt;/time&gt;</span>
        {% include page__date.html %}
      <span class="nt">&lt;/span&gt;</span>
    {% endif %}

    {% if document.read_time and document.show_date %}<span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"page__meta-sep"</span><span class="nt">&gt;&lt;/span&gt;</span>{% endif %}

    {% if document.read_time %}
      {% assign words_per_minute = document.words_per_minute | default: site.words_per_minute | default: 200 %}
      {% assign words = document.content | strip_html | number_of_words %}

      <span class="nt">&lt;span</span> <span class="na">class=</span><span class="s">"page__meta-readtime"</span><span class="nt">&gt;</span>
        <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"far {% if include.type == 'grid' and document.read_time and document.show_date %}fa-fw {% endif %}fa-clock"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/i&gt;</span>
        {% if words <span class="nt">&lt;</span> <span class="nt">words_per_minute</span> <span class="err">%}</span>
          <span class="err">{{</span> <span class="na">site.data.ui-text</span><span class="err">[</span><span class="na">site.locale</span><span class="err">].</span><span class="na">less_than</span> <span class="err">|</span> <span class="na">default:</span> <span class="err">"</span><span class="na">less</span> <span class="na">than</span><span class="err">"</span> <span class="err">}}</span> <span class="err">1</span> <span class="err">{{</span> <span class="na">site.data.ui-text</span><span class="err">[</span><span class="na">site.locale</span><span class="err">].</span><span class="na">minute_read</span> <span class="err">|</span> <span class="na">default:</span> <span class="err">"</span><span class="na">minute</span> <span class="na">read</span><span class="err">"</span> <span class="err">}}</span>
        <span class="err">{%</span> <span class="na">elsif</span> <span class="na">words =</span><span class="s">=</span> <span class="na">words_per_minute</span> <span class="err">%}</span>
          <span class="err">1</span> <span class="err">{{</span> <span class="na">site.data.ui-text</span><span class="err">[</span><span class="na">site.locale</span><span class="err">].</span><span class="na">minute_read</span> <span class="err">|</span> <span class="na">default:</span> <span class="err">"</span><span class="na">minute</span> <span class="na">read</span><span class="err">"</span> <span class="err">}}</span>
        <span class="err">{%</span> <span class="na">else</span> <span class="err">%}</span>
          <span class="err">{{</span> <span class="na">words</span> <span class="err">|</span> <span class="na">divided_by:</span> <span class="na">words_per_minute</span> <span class="err">}}</span> <span class="err">{{</span> <span class="na">site.data.ui-text</span><span class="err">[</span><span class="na">site.locale</span><span class="err">].</span><span class="na">minute_read</span> <span class="err">|</span> <span class="na">default:</span> <span class="err">"</span><span class="na">minute</span> <span class="na">read</span><span class="err">"</span> <span class="err">}}</span>
        <span class="err">{%</span> <span class="na">endif</span> <span class="err">%}</span>
      <span class="err">&lt;/</span><span class="na">span</span><span class="nt">&gt;</span>
    {% endif %}
  <span class="nt">&lt;/p&gt;</span>
{% endif %}

</code></pre></div></div>

<h2 id="2-page__datehtml">2. page__date.html</h2>
<p>파일의 기존 내용은 포스트의 Front Matter에 변수 <code class="language-plaintext highlighter-rouge">last_modified_at</code>이 설정되어 있으면 해당 변수 내용은 마지막 수정 날짜를, 그렇지 않으면 포스트 작성 날짜를 출력하도록 작성되어 있다. <code class="language-plaintext highlighter-rouge">page_meta.html</code> 내용을 확인해보면 포스트 게시 날짜는 반드시 출력되므로 기존에 작성된 흐름 제어 코드는 필요 없다. 따라서 기존 코드를 전부 지우고 다음 코드를 삽입한다.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
{% assign date_format = site.date_format | default: "%B %-d, %Y" %}
{% if page.last_modified_at %}
  <span class="nt">&lt;time</span> <span class="na">lastModified=</span><span class="s">"{{ page.last_modified_at | date_to_xmlschema}}"</span><span class="nt">&gt;&lt;br&gt;&lt;i</span> <span class="na">class=</span><span class="s">"far {% if include.type == 'grid' and document.read_time and document.show_date %}fa-fw {% endif %}fa-calendar-alt"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/i&gt;</span> Last modified at: {{ page.last_modified_at | date: date_format }}<span class="nt">&lt;/time&gt;</span>
{% endif %}

</code></pre></div></div>

<p style="text-align: center">결과
<img src="https://drive.google.com/uc?export=view&amp;id=1vDU2bIwv1V1Bwr_lE94__uMgXofm6432" alt="" class="align-center" />
&lt;그림 2. 포스트 수정 날짜 표시 결과&gt;</p>

<p>잘 표시되는 것을 확인할 수 있다.</p>]]></content><author><name>Dr.Maemi</name></author><category term="Github.io" /><category term="Jekyll" /><category term="Liquid" /><summary type="html"><![CDATA[이번엔 포스트 수정 날짜를 표시하는 방법에 대해서 알아보자. 현재 블로그는 Minimal Mistakes 테마의 Commit: 2632ff6가 완료된 시점의 코드를 기반으로 작성되었는데, 수정 날짜와 관련된 파일은 다음 세 개이다.]]></summary></entry><entry><title type="html">이미지 크기 조정 및 나란히 배치</title><link href="http://localhost:4000/github.io/image-resize-place-side-by-side/" rel="alternate" type="text/html" title="이미지 크기 조정 및 나란히 배치" /><published>2022-02-09T00:00:00+09:00</published><updated>2022-02-09T02:36:00+09:00</updated><id>http://localhost:4000/github.io/image-resize-place-side-by-side</id><content type="html" xml:base="http://localhost:4000/github.io/image-resize-place-side-by-side/"><![CDATA[<p>마크다운에서 이미지 크기를 조정하고 가로로 나란히 배치해보자.
결론부터 말하자면 마크다운 문법으로 이미지 각각에 캡션을 유지해서 가로로 나란히 배치하는 방법을 찾진 못했다. 본문에서는 방법을 찾기위해 시도해봤던 것들을 기록해두었다.</p>

<h2 id="1-캡션-없이">1. 캡션 없이</h2>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg</span><span class="p">)</span>{: width="45%"}
<span class="p">![](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q</span><span class="p">)</span>{: width="45%"}
</code></pre></div></div>
<p>가로 길이 비율을 적절히 조정하면 마크다운 문법으로 이미지를 가로로 나란히 배치할 수 있다.</p>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg" alt="" width="45%" />
<img src="https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q" alt="" width="45%" /></p>

<p>마찬가지로 html 문법으로 이미지를 가로로 나란히 배치할 수 있다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg"</span> <span class="na">width=</span><span class="s">"45%"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q"</span> <span class="na">width=</span><span class="s">"45%"</span> <span class="nt">/&gt;</span> 
</code></pre></div></div>

<p><img src="https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg" width="45%" />
<img src="https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q" width="45%" /></p>

<p>그런데 이 경우 이미지를 가운데 정렬할 수 없다는 문제가 있다.</p>

<h2 id="2-표를-이용해-이미지-배치">2. 표를 이용해 이미지 배치</h2>
<p>표 안에 이미지를 넣어 정렬 효과를 기대할 수 있다.</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>개 | 고양이
:-: | :-:
<span class="p">![](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg</span><span class="p">)</span>{: width="45%"} | !<span class="p">[](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q</span><span class="p">)</span>{: width="45%"}

개 | 고양이
:-: | :-:
<span class="p">![](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg</span><span class="p">)</span> | !<span class="p">[](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q</span><span class="p">)</span>
</code></pre></div></div>

<table>
  <thead>
    <tr>
      <th style="text-align: center">개</th>
      <th style="text-align: center">고양이</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg" alt="" width="45%" /></td>
      <td style="text-align: center"><img src="https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q" alt="" width="45%" /></td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: center">개</th>
      <th style="text-align: center">고양이</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><img src="https://drive.google.com/uc?export=view&amp;id=1lxVr632cvKmNU0sPIVkJUmPynkz31pLg" alt="" /></td>
      <td style="text-align: center"><img src="https://drive.google.com/uc?export=view&amp;id=1-AArs7kr1KkFDJqYkP8u2bjjRGXf_T9q" alt="" /></td>
    </tr>
  </tbody>
</table>

<p>이 경우엔 이미지를 원하는 비율로 설정하는 것이 힘들다.</p>]]></content><author><name>Dr.Maemi</name></author><category term="Github.io" /><category term="Jekyll" /><category term="Liquid" /><summary type="html"><![CDATA[마크다운에서 이미지 크기를 조정하고 가로로 나란히 배치해보자. 결론부터 말하자면 마크다운 문법으로 이미지 각각에 캡션을 유지해서 가로로 나란히 배치하는 방법을 찾진 못했다. 본문에서는 방법을 찾기위해 시도해봤던 것들을 기록해두었다.]]></summary></entry><entry><title type="html">포스트 게시 날짜 표시</title><link href="http://localhost:4000/github.io/show-posted-time/" rel="alternate" type="text/html" title="포스트 게시 날짜 표시" /><published>2022-02-08T00:00:00+09:00</published><updated>2022-02-10T15:30:00+09:00</updated><id>http://localhost:4000/github.io/show-posted-time</id><content type="html" xml:base="http://localhost:4000/github.io/show-posted-time/"><![CDATA[<p><strong>결론부터 말하자면 <a href="#2-configyml">2. _config.yml</a>의 방법이 가장 좋다.</strong></p>

<p>자료를 조사할 때 내가 찾은 자료가 언제 작성된 것인지 한 번쯤 궁금히 여겨본 적 있을 것이다. 필자도 그러했는데, 검색된 자료가 최신 자료일 수록 더 믿음이 가며 특히 논문 등에 참조 문헌으로 인용할 때에는 작성 날짜가 중요한 의미를 가진다.</p>

<p>따라서 블로그 포스팅을 할 때에도 작성 날짜에 관련된 정보가 중요하며, 중요한 정보일 수록 가장 먼저 눈에 띄는 것이 바람직하다고 생각한다. 본문에서는 <code class="language-plaintext highlighter-rouge">Minimal Mistakes</code> 기반 블로그 포스트에서 게시/수정 날짜를 표시하는 방법을 다룬다.</p>

<h2 id="1-_includespage__metahtml">1. /_includes/page__meta.html</h2>
<p>필자가 판단하기에 page__meta.html 파일을 수정하는 것보다 후술할 <a href="#2-configyml">2. _config.yml</a>의 방법이 더 효율적이다. 본문의 1장은 필자가 시도해봤던 방법으로 포스트 게시 날짜를 표시할 수 있으나 코드를 직접 수정해야 한다. 그보다는 2장처럼 Jekyll의 기능을 사용하는 것이 더 바람직하다고 생각한다.</p>

<p><code class="language-plaintext highlighter-rouge">/_includes</code> 경로 하위에 있는 <code class="language-plaintext highlighter-rouge">page__meta.html</code> 파일은 블로그 포스트의 메타 데이터 구성을 설정하는 파일이다.</p>

<p>먼저 해당 파일 내부에서 읽은 시간과 관련된 코드를 주석처리한다. <code class="language-plaintext highlighter-rouge">document.read_time</code>과 관련된 if 문을 통째로 주석처리하면 된다.
이후 다음 코드를 주석처리한 부분에 삽입한다.
ㅠㅕㅜ</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- Describe last modified date --&gt;</span>
{% if post.date %}
  <span class="nt">&lt;i</span> <span class="na">class=</span><span class="s">"far fa-fw fa-calendar-alt"</span> <span class="na">aria-hidden=</span><span class="s">"true"</span><span class="nt">&gt;&lt;/i&gt;</span> {{ post.date | date: "%B %d %Y" }}
{% endif %}
</code></pre></div></div>

<h2 id="2-_configyml">2. _config.yml</h2>
<p><code class="language-plaintext highlighter-rouge">_config.yml</code>은 Jekyll로 구현된 서버를 구동할 때 필요한 설정값들을 담고 있는 파일이다. 해당 파일 내부의 값들이 어떤 의미를 가지는지 알기 위한 내용은 본문에서 다루기엔 양이 너무 방대하니 <a href="http://jekyllrb-ko.github.io/docs/step-by-step/01-setup/">Jeykll 튜토리얼</a>을 참조하자.</p>

<p>본문의 주제에 필요한 것은 <code class="language-plaintext highlighter-rouge">_config.yml</code> 파일의 <code class="language-plaintext highlighter-rouge">defaults</code> 값을 수정하는 것이다.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">...</span>
<span class="c1"># Defaults</span>
<span class="na">defaults</span><span class="pi">:</span>
  <span class="c1"># default</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">home</span>
      <span class="na">author_profile</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">sidebar</span><span class="pi">:</span>
        <span class="na">nav</span><span class="pi">:</span> <span class="s">main-sidebar</span>
  <span class="c1"># _posts</span>
  <span class="pi">-</span> <span class="na">scope</span><span class="pi">:</span>
      <span class="na">path</span><span class="pi">:</span> <span class="s2">"</span><span class="s">"</span>
      <span class="na">type</span><span class="pi">:</span> <span class="s">posts</span>
    <span class="na">values</span><span class="pi">:</span>
      <span class="na">layout</span><span class="pi">:</span> <span class="s">single</span>
      <span class="na">author_profile</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">show_date</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">show_header-meta</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">read_time</span><span class="pi">:</span> <span class="no">false</span>
      <span class="na">comments</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">share</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">related</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">toc</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">toc_sticky</span><span class="pi">:</span> <span class="no">true</span>
      <span class="na">sidebar</span><span class="pi">:</span>
        <span class="na">nav</span><span class="pi">:</span> <span class="s">main-sidebar</span>
<span class="nn">...</span>
</code></pre></div></div>
<p>위와 같이 멤버 변수 중 <code class="language-plaintext highlighter-rouge">read_time</code>, <code class="language-plaintext highlighter-rouge">show_date</code>, <code class="language-plaintext highlighter-rouge">show_header-meta</code> 값을 설정하면 포스트별 읽은 시간 대신 게시 날짜를 표시할 수 있다.</p>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1UnWJfv6FolYIhS5BR1FB_GtJ__xwvmhe" alt="" class="align-center" />
&lt;그림 1. 게시 날짜 표시 전&gt;</p>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1CKmi-_MzVk12jxZwwtiE-Sb-TqOvsX0M" alt="" class="align-center" />
&lt;그림 2. 게시 날짜 표시 후&gt;</p>]]></content><author><name>Dr.Maemi</name></author><category term="Github.io" /><category term="Jekyll" /><category term="Liquid" /><summary type="html"><![CDATA[결론부터 말하자면 2. _config.yml의 방법이 가장 좋다.]]></summary></entry><entry><title type="html">Github.io 이미지 정렬</title><link href="http://localhost:4000/github.io/align-image/" rel="alternate" type="text/html" title="Github.io 이미지 정렬" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-08T05:21:00+09:00</updated><id>http://localhost:4000/github.io/align-image</id><content type="html" xml:base="http://localhost:4000/github.io/align-image/"><![CDATA[<p>이 블로그에 포스트할 때 이미지와 캡션을 가운데 정렬하여 보여주고 싶었다. 그런데 github의 REAMDE를 작성할 때처럼 했더니 적용이 안됐다.</p>

<p>결론부터 말하자면, 다음과 같은 문법을 통해 이미지 정렬을 할 수 있다.</p>

<div class="language-liquid highlighter-rouge"><div class="highlight"><pre class="highlight"><code>![&lt;alt&gt;](&lt;image link&gt;){: &lt;align code&gt;}
&lt;caption&gt;
{: &lt;align code&gt;}
</code></pre></div></div>
<ul>
  <li><code class="language-plaintext highlighter-rouge">alt</code>: <code class="language-plaintext highlighter-rouge">image link</code>로부터 이미지 업로드에 실패하면 표시될 대체 텍스</li>
  <li><code class="language-plaintext highlighter-rouge">image link</code>: 업로드할 이미지 링크</li>
  <li><code class="language-plaintext highlighter-rouge">align code</code>: 정렬 명령어
    <ul>
      <li><code class="language-plaintext highlighter-rouge">.align-left</code>: 왼쪽 정렬</li>
      <li><code class="language-plaintext highlighter-rouge">align-center</code>: 가운데 정렬</li>
      <li><code class="language-plaintext highlighter-rouge">align-right</code>: 오른쪽 정렬</li>
    </ul>
  </li>
  <li><code class="language-plaintext highlighter-rouge">caption</code>: 이미지 캡션 텍스트</li>
</ul>

<p><br />
예시</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">![](</span><span class="sx">https://drive.google.com/uc?export=view&amp;id=1pYF0eZ-IpPk24s0fQF6J7fbby_TGXWwy</span><span class="p">)</span>{: .align-center}
예시 사진(gif)
{: style="text-align: center;"}
</code></pre></div></div>
<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1pYF0eZ-IpPk24s0fQF6J7fbby_TGXWwy" alt="" class="align-center" />
예시 사진(gif)</p>
<p>예시 코드를 보면 이미지 링크로 구글 드라이브와 연동도 가능하다.</p>]]></content><author><name>Dr.Maemi</name></author><category term="Github.io" /><category term="Jekyll" /><category term="Liquid" /><summary type="html"><![CDATA[이 블로그에 포스트할 때 이미지와 캡션을 가운데 정렬하여 보여주고 싶었다. 그런데 github의 REAMDE를 작성할 때처럼 했더니 적용이 안됐다.]]></summary></entry><entry><title type="html">Markdown 사용법</title><link href="http://localhost:4000/programming-language/markdown/how-to-use-markdown/" rel="alternate" type="text/html" title="Markdown 사용법" /><published>2022-02-06T00:00:00+09:00</published><updated>2022-02-09T02:34:00+09:00</updated><id>http://localhost:4000/programming-language/markdown/how-to-use-markdown</id><content type="html" xml:base="http://localhost:4000/programming-language/markdown/how-to-use-markdown/"><![CDATA[<h2 id="목차">목차</h2>
<ul>
  <li><a href="#1-마크다운이란">1. 마크다운이란?</a></li>
  <li><a href="#2-기본-문법">2. 기본 문법</a></li>
  <li><a href="#3-같은-문서-내-헤더로-링크-걸기">3. 같은 문서 내 헤더로 링크 걸기</a></li>
  <li><a href="#4-중첩된-목록">4. 중첩된 목록</a></li>
</ul>

<p><br /></p>

<h2 id="1-마크다운이란">1. 마크다운이란?</h2>
<p>마크다운은 평문(plain-text) 편집기를 사용하는 정형화된(formatted) 텍스트를 위한 경량 마크업 언어다. 마크다운은 블로그나 즉석 메시지(instant messaging), 온라인 포럼, 협업 소프트웨어 그리고 리드미(REAMDE) 파일 등에 널리 사용된다.
<br /></p>

<h2 id="2-기본-문법">2. 기본 문법</h2>
<p>마크다운의 기본 문법은 두레이의 마크다운 가이드 링크 <a href="https://dooray.com/htmls/guides/markdown_ko_KR.html">https://dooray.com/htmls/guides/markdown_ko_KR.html</a>에서 자세히 익힐 수 있다.
<br /></p>

<h2 id="3-같은-문서-내-헤더로-링크-걸기">3. 같은 문서 내 헤더로 링크 걸기</h2>
<p>목차를 작성할 때 주로 사용하거나, 본문 내에서 특정 헤더로 이동이 필요할 때 사용한다. 다음과 같은 규칙으로 작성된다.</p>
<ul>
  <li><a href="#링크할 헤더">보여줄 텍스트</a> 형식으로 기입</li>
  <li>스페이스바(띄어쓰기)는 ‘-‘로 대체</li>
  <li>’.’, ‘-‘, ‘_’, ‘:’, ‘(‘, ‘)’, ‘?’는 무시한다(제거)</li>
  <li>이모지는 무시한다(제거)</li>
  <li>대문자는 소문자로 바꿔 쓴다</li>
  <li>어떤 헤더이든 ‘#’는 한 번만 쓴다</li>
</ul>

<p>예시</p>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>자세한 내용은 <span class="p">[</span><span class="nv">5번 챕터</span><span class="p">](</span><span class="sx">#5-대충-어떤-헤더</span><span class="p">)</span>을 참조하세요.
...

<span class="gu">### 5. 대?충 어:떤 헤-더</span>
...
</code></pre></div></div>
<p><br /></p>

<h2 id="4-중첩된-목록">4. 중첩된 목록</h2>
<p>두 칸을 들여 쓰거나, <code class="language-plaintext highlighter-rouge">tab</code>키를 입력해 중첩된 목록을 만들 수 있다.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">1.</span> 첫 번째 목록
<span class="p">    1.</span> 첫 번째의 첫 번째 목록
<span class="p">    2.</span> 첫 번째의 두 번째 목록
<span class="p">2.</span> 2
<span class="p">    -</span> 2 1
<span class="p">    -</span> 2 2
<span class="p">        -</span> 2 2 1
<span class="p">        -</span> 2 2 2
<span class="p">    -</span> 2 3
</code></pre></div></div>
<p><br />
결과</p>
<ol>
  <li>첫 번째 목록
    <ol>
      <li>첫 번째의 첫 번째 목록</li>
      <li>첫 번째의 두 번째 목록</li>
    </ol>
  </li>
  <li>2
    <ul>
      <li>2 1</li>
      <li>2 2
        <ul>
          <li>2 2 1</li>
          <li>2 2 2</li>
        </ul>
      </li>
      <li>2 3</li>
    </ul>
  </li>
</ol>

<p><br /></p>

<h2 id="표와-정렬">표와 정렬</h2>
<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code>왼쪽 정렬 | 가운데 정렬 | 오른쪽 정렬
:------- | :--------: | -:
왼쪽 | 가운데 | 오른쪽
정렬 | 정렬 | 정렬
</code></pre></div></div>
<p><br />
결과</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">왼쪽 정렬</th>
      <th style="text-align: center">가운데 정렬</th>
      <th style="text-align: right">오른쪽 정렬</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">왼쪽</td>
      <td style="text-align: center">가운데</td>
      <td style="text-align: right">오른쪽</td>
    </tr>
    <tr>
      <td style="text-align: left">정렬</td>
      <td style="text-align: center">정렬</td>
      <td style="text-align: right">정렬</td>
    </tr>
  </tbody>
</table>]]></content><author><name>Dr.Maemi</name></author><category term="Programming-Language" /><category term="Markdown" /><category term="Programming-Language" /><summary type="html"><![CDATA[목차 1. 마크다운이란? 2. 기본 문법 3. 같은 문서 내 헤더로 링크 걸기 4. 중첩된 목록]]></summary></entry><entry><title type="html">파이썬 개발 환경 설정</title><link href="http://localhost:4000/programming-language/python/Python-Dev-Env/" rel="alternate" type="text/html" title="파이썬 개발 환경 설정" /><published>2022-02-03T00:00:00+09:00</published><updated>2022-02-08T15:13:00+09:00</updated><id>http://localhost:4000/programming-language/python/Python-Dev-Env</id><content type="html" xml:base="http://localhost:4000/programming-language/python/Python-Dev-Env/"><![CDATA[<p>문법이 간단해서 비전공자도 쉽고 재미있게 배울 수 있는 파이썬, 본문을 통해 어떻게 시작할 수 있는지 알아보자.</p>

<p>필자는 AI 엔진을 개발하거나 백엔드 서버에서 일부 비즈니스 로직을 다루는데 파이썬을 사용하는데, 아나콘다와 주피터 노트북, VS Code를 이용해서 개발하는게 편했다. 본문의 내용은 이와 관련된 내용으로 구성되어 있다.</p>

<h2 id="목차">목차</h2>
<ul>
  <li><a href="#1-아나콘다">1. 아나콘다</a>
    <ul>
      <li><a href="#11-설치">1.1. 설치</a></li>
      <li><a href="#12-가상환경-생성">1.2. 가상환경 생성</a></li>
      <li><a href="#13-패키지-설치">1.3. 패키지 설치</a></li>
      <li><a href="#14-설치된-패키지-삭제">1.4. 설치된 패키지 삭제</a></li>
      <li><a href="#15-가상환경-복제">1.5. 가상환경 복제</a></li>
    </ul>
  </li>
  <li><a href="#2-주피터-노트북---가상-환경-연동">2. 주피터 노트북 - 가상 환경 연동</a></li>
  <li><a href="3-vs-code---가상환경-연동">3. VS Code - 가상환경 연동</a></li>
</ul>

<p><br /><br /></p>

<h2 id="1-아나콘다">1. 아나콘다</h2>
<h3 id="11-설치">1.1. 설치</h3>
<p><a href="https://www.anaconda.com/products/individual">https://www.anaconda.com/products/individual</a> - 공식 배포 버전<br />
<a href="https://repo.anaconda.com/archive/">https://repo.anaconda.com/archive/</a> - 버전 별 다운, 쉘 명령어 <code class="language-plaintext highlighter-rouge">wget</code> 혹은 <code class="language-plaintext highlighter-rouge">curl</code>로 다운 가능</p>

<p>

i386 은 Intel 의 80386 CPU 계열의 CPU
i586 은 Intel 의 80586 CPU 계열의 Pentium CPU
i686 은 Intel 의 80686 CPU 계열의 Pentium Pro 이상의 CPU
</p>
<p>

x86  - 위에 언급한 CPU들을 의미
</p>
<p>

리눅스의 여러 패키지를 다운 받을 때 i386, i586, i686, x86, x86_64 등 여러가지가 표시되어 있는데, 이것들의 의미는 해당 코드가 타겟 CPU에 적합하게 컴파일되어 있다는 것을 의미
</p>
<p>

그러므로 x86 은 i386, i586, i686 의 모든 플랫폼에서 동작할 수 있고, x86_64 는 i386, i586, i686 의 64bit 환경에서 동작하는 것을 의미
</p>

<h3 id="12-가상환경-생성">1.2. 가상환경 생성</h3>
<p>다음과 같이 가상환경을 생성할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create --name(-n) [가상환경명] [설치할패키지]
</code></pre></div></div>
<p><br />
예시</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create -n testenv python=3.6
</code></pre></div></div>

<p><br />
이후 다음과 같이 가상환경 활성화, 비활성화할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda activate testenv
conda deactivate
</code></pre></div></div>

<p><br />
가상환경 삭제 - base(root) 계정으로 활성화(activate) 후 삭제하는 게 좋음</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda activate root
conda remove --name [가상환경명] --all
</code></pre></div></div>

<h3 id="13-패키지-설치">1.3. 패키지 설치</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda activate [가상환경 명]
conda install [패키지 명]
pip install [패키지 명]
</code></pre></div></div>

<p><br />
다음과 같이 패키지 버전을 명시하여 설치할 수 있다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pip install numpy==1.19.4
</code></pre></div></div>

<h3 id="14-설치된-패키지-삭제">1.4. 설치된 패키지 삭제</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda uninstall [패키지 명]
</code></pre></div></div>

<h3 id="15-가상환경-복제">1.5. 가상환경 복제</h3>
<p>기존에 세팅해둔 가상환경에서 약간의 변경 후 사용하고 싶을 때 사용한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda create --name [새로운 가상환경 명] --clone [기존 가상환경 명]
</code></pre></div></div>

<p><br /></p>

<h2 id="2-주피터-노트북---가상-환경-연동">2. 주피터 노트북 - 가상 환경 연동</h2>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1FdSXpvQKyCVjyo5JKjEeqNqTCz7RaLVY" alt="" class="align-center" />
파이썬 파일 생성</p>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1Z-Qq12cfMYxzpejDN9R4MvuoknsLfbQr" alt="" class="align-center" />
가상환경 커널이 아직 존재하지 않는다</p>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1EEiCy2I6G3qhx8HQ5L7uDEPnPpgxCLqD" alt="" class="align-center" />
testenv라는 가상환경이 존재</p>

<p>이 상태에서 testenv를 활성화하고 <code class="language-plaintext highlighter-rouge">jupyter --version</code>를 커맨드로 입력하면 ipykernel이 설치되어 있음을 확인한다.</p>

<p>만약 그렇지 않다면 활성화한 가상환경에서 <code class="language-plaintext highlighter-rouge">pip install jupyter</code>로 설치한다.</p>

<p>확인했다면 비활성화 후 가상환경 커널을 생성한다.</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>conda deactivate
python -m ipykernel install --user --name [가상환경명] --display-name [커널명]
</code></pre></div></div>

<p><br />
예시</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>python -m ipykernel install --user --name testenv --display-name testenv
</code></pre></div></div>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1L2cEAmqzgJhX4aGE1bOBYjb4ef8W70yP" alt="" class="align-center" />
ipykernel 명령어 입력</p>

<p style="text-align: center;"><img src="https://drive.google.com/uc?export=view&amp;id=1jvQqaTjcTknZVBo140tkSC01srO4EaUr" alt="" class="align-center" />
주피터 노트북 새로고침 후 가상환경 확인</p>

<p><br /></p>

<h2 id="3-vs-code---가상환경-연동">3. VS Code - 가상환경 연동</h2>
<p>[Ctrl] + [Shift] + [P]를 입력하면 command pallet가 나타난다.</p>

<p>나타난 창에 ‘Python: Select Interpreter’을 입력하면, 원하는 파이썬 버전의 가상환경을 선택할 수 있다.</p>

<p>만약 Select Interpreter를 검색했음에도 나타나지 않는다면, VS Code의 Python extension을 설치해야 한다.</p>]]></content><author><name>Dr.Maemi</name></author><category term="Programming-Language" /><category term="Python" /><category term="Anaconda" /><category term="Jupyter Notebook" /><category term="VSCode" /><summary type="html"><![CDATA[문법이 간단해서 비전공자도 쉽고 재미있게 배울 수 있는 파이썬, 본문을 통해 어떻게 시작할 수 있는지 알아보자.]]></summary></entry></feed>